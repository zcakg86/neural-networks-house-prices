#%%
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Create sample data
data = {
    'Category': ['A', 'B', 'C', 'A', 'B', 'C', 'A'],
    'Value': [10, 15, 8, 12, 14, 6, 9],
    'Group': ['Group1', 'Group1', 'Group1', 'Group2', 'Group2', 'Group2', 'Group2']
}
df = pd.DataFrame(data)

# Method 1: Simple scatter plot with categorical colors
plt.figure(figsize=(10, 5))

# Create a color map for categories
color_map = {'A': 'red', 'B': 'blue', 'C': 'green'}
colors = [color_map[cat] for cat in df['Category']]

plt.subplot(1, 2, 1)
plt.scatter(df.index, df['Value'], c=colors)
plt.title('Scatter Plot with Categorical Colors')
plt.legend(color_map.keys())

# Method 2: Using categorical data with a bar plot
plt.subplot(1, 2, 2)
for category, color in color_map.items():
    mask = df['Category'] == category
    plt.bar(df.index[mask], df['Value'][mask], color=color, label=category)

plt.title('Bar Plot with Categorical Colors')
plt.legend()

plt.tight_layout()
plt.show()

# Bonus: Using seaborn for easier categorical plotting
import seaborn as sns

plt.figure(figsize=(10, 5))
sns.scatterplot(data=df, x='Group', y='Value', hue='Category', palette=color_map)
plt.title('Seaborn Plot with Categorical Colors')
plt.show()
# %%
